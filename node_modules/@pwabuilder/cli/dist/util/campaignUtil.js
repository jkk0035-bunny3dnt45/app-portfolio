"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleCampaign = exports.WHISPER_CAMPAIGN = void 0;
const os_1 = __importDefault(require("os"));
const fs = __importStar(require("fs"));
const fileUtil_1 = require("../util/fileUtil");
const usage_analytics_1 = require("../analytics/usage-analytics");
const util_1 = require("./util");
const textUtil_1 = require("./textUtil");
const whisperDisplayText = (0, textUtil_1.formatCodeSnippet)(`${(0, textUtil_1.formatEmphasis)("Want to start using AI on the web?")} We just added a new starter template!
The new whisper template includes a Whisper transcription model to get you started with building AI-empowered progressive web apps!
Run ${(0, textUtil_1.formatEmphasisStrong)("pwa create -t=whisper myWhisperPWA")} to pull the new template.
`);
exports.WHISPER_CAMPAIGN = {
    name: "whisper",
    displayed: false,
    displayText: whisperDisplayText
};
function handleCampaign(campaign) {
    const pwabuilderDataFilePath = os_1.default.homedir() + "/.pwabuilder";
    var userData;
    if ((0, fileUtil_1.doesFileExist)(pwabuilderDataFilePath)) {
        userData = JSON.parse(fs.readFileSync(pwabuilderDataFilePath, { encoding: 'utf-8' }));
    }
    else {
        userData = (0, usage_analytics_1.createUserDataAndWrite)(pwabuilderDataFilePath);
    }
    handleShowCampaign(userData, campaign);
}
exports.handleCampaign = handleCampaign;
function doesCampaignExist(userData, campaignKey) {
    return userData.campaignMap && campaignKey in userData.campaignMap;
}
function addCampaign(userData, campaign) {
    if (doesCampaignExist(userData, campaign.name)) {
        return userData;
    }
    if (!userData.campaignMap) {
        userData.campaignMap = {};
    }
    userData.campaignMap[campaign.name] = campaign;
    return userData;
}
function handleShowCampaign(userData, campaign) {
    var userDataWithCampaign = addCampaign(userData, campaign);
    if (userDataWithCampaign.campaignMap && !userDataWithCampaign.campaignMap[campaign.name].displayed) {
        (0, util_1.outputMessage)(campaign.displayText);
        campaign.displayed = true;
        userDataWithCampaign.campaignMap[campaign.name] = campaign;
        rewritePWABuilderDataFile(userDataWithCampaign);
    }
}
function rewritePWABuilderDataFile(userData) {
    const pwabuilderDataFilePath = os_1.default.homedir() + "/.pwabuilder";
    fs.writeFileSync(pwabuilderDataFilePath, JSON.stringify(userData), { encoding: 'utf-8' });
}
//# sourceMappingURL=campaignUtil.js.map