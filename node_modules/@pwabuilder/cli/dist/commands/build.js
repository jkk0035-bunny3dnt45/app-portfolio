"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.builder = exports.desc = exports.command = void 0;
const util_1 = require("../util/util");
const usage_analytics_1 = require("../analytics/usage-analytics");
const campaignUtil_1 = require("../util/campaignUtil");
const COMMAND_DESCRIPTION_STRING = 'Build the PWA Starter using Vite.';
const VITEARGS_DESCRIPTION_STRING = 'Arguments to pass directly to the Vite build process.';
exports.command = 'build';
exports.desc = COMMAND_DESCRIPTION_STRING;
const USAGE_STRING = '$0 build [viteArgs]';
const EXEC_BUILD_NO_ARGS_STRING = 'npm run build';
const EXEC_BUILD_ARGS_STRING = (viteArgs) => { return 'npm run build -- ' + viteArgs; };
const INVALID_DIRECTORY_ERROR_STRING = `Cannot execute build because the current working directory is not a valid PWA Starter template. 
Make sure you are executing the build command from a PWA Starter template directory.`;
const builder = (yargs) => yargs
    .options({
    viteArgs: { type: 'string', description: VITEARGS_DESCRIPTION_STRING }
})
    .usage(USAGE_STRING);
exports.builder = builder;
const handler = async (argv) => {
    try {
        (0, campaignUtil_1.handleCampaign)(campaignUtil_1.WHISPER_CAMPAIGN);
        (0, usage_analytics_1.trackBuildEventWrapper)();
        await handleBuildCommand(argv);
    }
    catch (error) {
        (0, usage_analytics_1.trackErrorWrapper)(error);
    }
};
exports.handler = handler;
async function handleBuildCommand(argv) {
    const { viteArgs } = argv;
    if ((0, util_1.isDirectoryTemplate)()) {
        spawnBuildCommand(viteArgs);
    }
    else {
        (0, util_1.outputError)(INVALID_DIRECTORY_ERROR_STRING);
    }
}
async function spawnBuildCommand(viteArgs) {
    if (viteArgs) {
        (0, util_1.spawnWrapper)(EXEC_BUILD_ARGS_STRING(viteArgs));
    }
    else {
        (0, util_1.spawnWrapper)(EXEC_BUILD_NO_ARGS_STRING);
    }
}
//# sourceMappingURL=build.js.map